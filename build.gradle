import org.gradle.platform.base.internal.ToolSearchBuildAbility

// buildScript是用来加载Gradle脚本自身需要使用的资源，可以声明的资源包括依赖项、第三方插件、maven仓库地址等。
buildscript {
    ext {
        springBootVersion = "2.7.1"

    }
    // 配置仓库
    repositories {
        mavenLocal()
        maven { url "https://maven.aliyun.com/nexus/content/groups/public" }
        mavenCentral()
    }
    //此处引入插件
    dependencies {
        // 由于这个插件并没有在gradle 官方插件库（https://plugins.gradle.org/）中托管，所以需要引入依赖，如果已经托管到gradle官方插件库中则可以直接通过plugins DSL的方式应用
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

// 通过扩展属性统一依赖的管理，扩展属性还可以定义任何你可能会使用到的属性
ext{
    depVersion= [
            lombok: "1.18.24",
            // gradle 或者说 groovy对中划线的解析不是很好，这里如果不加引号会报错，使用的时候也要使用map[key]形式使用，否则还是会报错
            //建议转成驼峰写法
            "forest-spring-boot-starter":"1.5.24",
            mybatisPlus: "3.5.2",
            log4j:"2.18.0",
            jansi:"2.4.0",
            commonsLang3: "3.12.0",
            hutool: "5.8.4",
            "mybatis-enhance-actable":"1.5.0.RELEASE",
            mysql:"8.0.29",
            druidSpringBootStart:"1.2.11"
    ]
}


subprojects {
    //java 插件时gradle内部自带的插件，不需要引入依赖
    apply plugin: "java"
    //社区插件，需要事先引入,才能应用，由于配置了spring-boot-gradle-plugin,所以这里不需要写版本号
    apply plugin: "org.springframework.boot"
    apply plugin: "io.spring.dependency-management"


    //基本JDK配置sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileJava.options.encoding "UTF-8"
    compileTestJava.options.encoding "UTF-8"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    group "com.xx"
    version "1.0-SNAPSHOT"

    repositories {
        mavenLocal()
        maven {url "https://maven.aliyun.com/repository/public"}
        maven {url "https://maven.aliyun.com/repository/central"}
        maven {url "https://maven.aliyun.com/repository/google"}
        maven {url "https://maven.aliyun.com/repository/spring"}
        mavenCentral()
    }

    //依赖的配置:设置通用的依赖
    dependencies {
        // 解决使用gradle引入lombok后编译失败（不识别相关注解和log等问题）
        compileOnly "org.projectlombok:lombok:$depVersion.lombok"
        annotationProcessor "org.projectlombok:lombok:$depVersion.lombok"

        testCompileOnly "org.projectlombok:lombok:$depVersion.lombok"
        testAnnotationProcessor "org.projectlombok:lombok:$depVersion.lombok"
    }
    test {
        useJUnitPlatform()
    }
}

project("code-generator"){
    dependencies {
        implementation "com.baomidou:mybatis-plus-boot-starter:${depVersion["mybatisPlus"]}"
        testImplementation "com.baomidou:mybatis-plus-generator:${depVersion["mybatisPlus"]}"
    }
}


project("xx-unweb"){
    dependencies {
        implementation "org.apache.logging.log4j:log4j-core:$depVersion.log4j"
        implementation "org.fusesource.jansi:jansi:$depVersion.jansi"
    }
}

project("xx-web"){
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "com.dtflys.forest:forest-spring-boot-starter:${depVersion['forest-spring-boot-starter']}"
        implementation "org.apache.commons:commons-lang3:$depVersion.commonsLang3"
        implementation "cn.hutool:hutool-all:$depVersion.hutool"
        implementation "com.baomidou:mybatis-plus-boot-starter:$depVersion.mybatisPlus"
        implementation "com.gitee.sunchenbin.mybatis.actable:mybatis-enhance-actable:${depVersion['mybatis-enhance-actable']}"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
}

project("xx-web-nodb"){
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
    }
}

project("xx-dbp-druid"){
    dependencies {
        implementation "org.springframework.boot:spring-boot-starter-web"
        implementation "org.springframework.boot:spring-boot-starter-aop"
        testImplementation "org.springframework.boot:spring-boot-starter-test"
        runtimeOnly "mysql:mysql-connector-java:$depVersion.mysql"
        implementation ("com.alibaba:druid-spring-boot-starter:$depVersion.druidSpringBootStart"){
            exclude group: "com.sun",module: "tools"
            exclude group: "com.sun",module: "jconsole"
        }
        implementation ("com.baomidou:mybatis-plus-boot-starter:${depVersion["mybatisPlus"]}") {
            exclude group: 'com.zaxxer', module: 'HikariCP'
        }


    }
}

project("xx-security"){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.security:spring-security-test'
    }
}