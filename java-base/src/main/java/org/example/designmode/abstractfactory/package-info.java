package org.example.designmode.abstractfactory;
/**
 * 抽象工厂模式：
 * 提供接口创建一系列相关但又不同的产品，目的是解决多产品族（如：产品品牌）和多类产品（如：电视、车）的创建问题
 *
 * 如：
 * 对多产品族进行抽象，比如 海尔 小米
 * 多类产品 比如电视，车
 * 海尔工厂负责生产海尔品牌的电视和车
 * 小米工厂负责生产小米品牌的电视和车
 *
 * 可以解决的问题
 * 比如需要对接不同的云厂商，云厂商提供的功能又差不多，那么就可以对其进行抽象，这在增加新的厂商的时候可以不用修改以前的代码，只需要增加对应的厂商相关的实现类既可
 * 缺点：
 * 如果厂商增加了新的功能（比如原本没有空调，现在有了），那所有的实现就都需要进行修改
 * 另外这种模式增加了很多的类和接口，理解上不易
 *
 *
 */