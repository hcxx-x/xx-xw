# JDBC 逻辑库名称。在集群模式中，使用该参数来联通 ShardingSphere-JDBC 与 ShardingSphere-Proxy。
# 默认值：logic_db
databaseName: logic_db

# 模式配置，单节点或者集群配置
mode:
  type: Standalone
  repository:
    type: JDBC

# 数据源配置
dataSources:
  #数据源名称
  ds_0:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:33060/sharding-sphere
    username: root
    password: root
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:33061/sharding-sphere
    username: root
    password: root


rules:
- !SHARDING
  tables:
    t_user:
      actualDataNodes: ds_${0..1}.t_user_${0..1}
      databaseStrategy:
        # 用于单分片键的标准分片场景
        standard:
          shardingColumn: id
          # 分片算法名称
          shardingAlgorithmName: alg_inline_user_id
      # 分表策略，同分库策略
      tableStrategy:
        # 用于单分片键的标准分片场景
        standard:
          shardingColumn: uname
          # 分片算法名称
          shardingAlgorithmName: alg_inline_user_uname
      keyGenerateStrategy:
        column: id
        keyGeneratorName: snowflake
    t_order:
      actualDataNodes: ds_${0..1}.t_order_${0..1}
      databaseStrategy:
        # 用于单分片键的标准分片场景
        standard:
          shardingColumn: id
          # 分片算法名称
          shardingAlgorithmName: alg_inline_order_id
      # 分表策略，同分库策略
      tableStrategy:
        # 用于单分片键的标准分片场景
        standard:
          shardingColumn: order_no
          # 分片算法名称
          shardingAlgorithmName: alg_inline_order_no
      keyGenerateStrategy:
        column: id
        keyGeneratorName: snowflake

  shardingAlgorithms:
    alg_inline_user_id:
      type: INLINE
      props:
        algorithm-expression: ds_${id % 2}
    alg_inline_user_uname:
      type: INLINE
      props:
        #字符串hashcode计算后取绝对值然后在取模进行分片（或者先hashcode取模，然后再取绝对值）
        #algorithm-expression: t_user_${(uname.hashCode() % 2).abs()}
        algorithm-expression: t_user_${uname.hashCode().abs() % 2}
    alg_inline_order_id:
      type: INLINE
      props:
        algorithm-expression: ds_${id % 2}
    alg_inline_order_no:
      type: INLINE
      props:
        #字符串hashcode计算后取绝对值然后在取模进行分片（或者先hashcode取模，然后再取绝对值）
        #algorithm-expression: t_order_${(order_no.hashCode() % 2).abs()}
        algorithm-expression: t_order_${order_no.hashCode().abs() % 2}
  keyGenerators:
    snowflake:
      type: SNOWFLAKE


props:
  sql-show: true
